Event Binding, State, Two Way Binding

Ex: Shopping Cart

ShoppingComponent.js


import { useState, useEffect } from "react";

export default function ShoppingComponent()
{
    const [categories, setCategories] = useState([]);
    const [products, setProducts] = useState([]);
    const [cartItems, setCartItems] = useState([]);
    const [itemsCount, setItemsCount] = useState(0);

    function GetCartItemsCount(){
        setItemsCount(cartItems.length);
    }

    function LoadCategories(){
        fetch('http://fakestoreapi.com/products/categories&#39;)
        .then(response=> response.json())
        .then(data=> {
            data.unshift('all');
            setCategories(data);
        })
    }

    function LoadProducts(url){
        fetch(url)
        .then(response=> response.json())
        .then(data=>{
            setProducts(data);
        })
    }

    useEffect(()=>{
        LoadCategories();
        LoadProducts('http://fakestoreapi.com/products&#39;);
    },[cartItems.length])


    function handleCategoryChange(e){
        if(e.target.value=='all'){
            LoadProducts('http://fakestoreapi.com/products&#39;);
        } else {
        LoadProducts(`http://fakestoreapi.com/products/category/${e.target.value}`)
        }
    }

    function handleAddtoCart(e){
            alert("Item Added to Cart");
            fetch(`http://fakestoreapi.com/products/${e.target.id}`)
            .then(response=> response.json())
            .then(data=>{
                cartItems.push(data);
                GetCartItemsCount();
            })
           
    }

    return(
        <div className="container-fluid">
          <header className="bg-danger text-white text-center p-2">
             <h1> <span className="bi bi-cart"></span> Shopping Home</h1>
          </header>
          <section className="row mt-3">
            <nav className="col-2">
               <div>
                <label>Select a Category</label>
                <div>
                    <select onChange={handleCategoryChange} className="form-select">
                        {
                            categories.map(category=>
                                <option value={category} key={category}>{category.toUpperCase()}</option>
                                )
                        }
                    </select>
                </div>
               </div>
            </nav>
            <main className="col-6 d-flex flex-wrap overflow-auto" style={{height:'600px'}} >
                {
                    products.map(product=>
                        <div key={product.id} className="card m-2 p-2" style={{width:'200px'}}>
                            <img src={product.image} className="card-img-top" height="150" />
                            <div className="card-header" style={{height:'160px'}}>
                                <p>{product.title}</p>
                            </div>
                            <div className="card-body">
                                <dl>
                                    <dt>Price</dt>
                                    <dd>{product.price}</dd>
                                    <dt>Rating</dt>
                                    <dd>
                                        <span className="bi bi-star-fill text-success"></span>
                                        {product.rating.rate} <span>[{product.rating.count}]</span>
                                    </dd>
                                </dl>
                            </div>
                            <div className="card-footer">
                                <button id={product.id} onClick={handleAddtoCart} className="btn btn-danger w-100">
                                    <span className="bi bi-cart4"></span> Add to Cart
                                </button>
                            </div>
                        </div>
                        )
                }
            </main>
            <aside className="col-4">
                <button className="btn btn-danger w-100">
                    <span className="bi bi-cart3"></span> [{itemsCount}] Your Cart Items
                </button>
                <table className="table table-hover">
                  <thead>
                    <tr>
                        <th>Title</th>
                        <th>Price</th>
                        <th>Preview</th>
                    </tr>
                  </thead>
                  <tbody>
                    {
                        cartItems.map(item=>
                            <tr key={item.id}>
                                <td>{item.title}</td>
                                <td>{item.price}</td>
                                <td>
                                    <img src={item.image} width="50" height="50" />
                                </td>
                                <td>
                                    <button className="btn btn-danger">
                                        <span className="bi bi-trash"></span>
                                    </button>
                                </td>
                            </tr>
                            )
                    }
                  </tbody>
                </table>
            </aside>
          </section>
        </div>
    )
}
                State and Event Binding in Class Component

- Class Component is a JavaScript class that extends "React.Component"

- Class component is configured with implicit state, which is defined in "React.Component" base.

- State in react class component is configure at the time creating object for component. [Constructor]

- In Class component state is defined in constructor.

- State in class component is an JavaScript object with key and value collection.

            constructor(props)
            {
                super(props);
                this.state = {
                     key : value|number|string|boolean|array|object etc..
                 }
            }


Ex: One Way Binding

import React from "react";

export default class TwoWayClassDemo extends React.Component
{
    constructor(props){
        super(props)
        this.state = {
            title: 'Product Details',
            Name: 'Samsung TV',
            Price: 56000.44,
            Stock: true,
            Cities: ['Delhi', 'Hyd'],
            Rating: {rate:4.5, count:6700}
        }
    }
    render(){
        return(
            <div className="container-fluid">
                <h2>{this.state.title}</h2>
                <dl>
                    <dt>Name</dt>
                    <dd>{this.state.Name}</dd>
                    <dt>Price</dt>
                    <dd>{this.state.Price}</dd>
                    <dt>Stock</dt>
                    <dd>{(this.state.Stock==true)?"Available":"Out of Stock"}</dd>
                    <dt>Cities</dt>
                    <dd>
                        <ol>
                            {
                                this.state.Cities.map(city=>
                                     <li key={city}>{city}</li>
                                    )
                            }
                        </ol>
                    </dd>
                    <dt>Rating</dt>
                    <dd>
                        <span className="bi bi-star-fill text-success"></span> {this.state.Rating.rate} [{this.state.Rating.count}]
                    </dd>
                </dl>
            </div>
        )
    }
}

- To read the value configure in state of class component your have to refer the key.

            { this.state.key }

- To set the value into state you have to use the method

            this.setState()

- You can't set state at any specified event in DOM, as state is configured at instantiation of component and event is defined after initiantiation.

Note: If your event is trying to use state then your event must bind with state.

            constructor()
            {
                 this.handleChange = this.handleChange.bind(this);
            }
                    (or)

        <input type="text"  onChange={this.handleChange.bind(this)}>


Ex:
import React from "react";

export default class TwoWayClassDemo extends React.Component
{
    constructor(props){
        super(props)
        this.state = {
            UserName: 'John'
        }
      //  this.handleUserChange = this.handleUserChange.bind(this);
    }

    handleUserChange(e){
        this.setState({
            UserName: e.target.value
        })
    }

    render(){
        return(
            <div className="container-fluid">
               <h2>User Details</h2>
               <input type="text" onChange={this.handleUserChange.bind(this)} />
               <br/>
               <p>Hello ! {this.state.UserName}</p>
            </div>
        )
    }
}